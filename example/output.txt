p: unsafe
p: internal/race
p: internal/goarch
p: internal/goexperiment
p: internal/goos
p: internal/cpu
p: runtime/internal/syscall
p: sync/atomic
p: runtime/internal/atomic
p: unicode/utf8
p: github.com/YardenLaif/balagan/example/other
p: runtime/internal/math
p: internal/abi
p: internal/bytealg
p: internal/coverage/rtcov
p: runtime/internal/sys
p: runtime
package other

type A interface {
	Floo()
}

var a interface{}

type b int8

func (c *b) d() {
}

func (e *b) B(f []byte) (g int, h error) {
	return 0, nil
}

func C() {
	if _, i := a.(A); i {
		j()
	}
}

func j() {
}
p: unicode
p: internal/unsafeheader
p: math/bits
p: math
p: internal/itoa
p: sync
p: internal/reflectlite
p: errors
p: internal/testlog
p: sort
p: io
p: internal/oserror
p: internal/safefilepath
p: strconv
p: path
p: syscall
p: reflect
p: internal/syscall/execenv
p: internal/syscall/unix
p: time
p: internal/fmtsort
p: internal/poll
p: io/fs
p: os
p: fmt
p: github.com/YardenLaif/balagan/example
package example

import (
	"fmt"
	"io"

	"github.com/YardenLaif/balagan/example/other"
)

type a interface {
	foo()
}

type b struct {
	c int
}

func (d *b) foo() {
}
func (e *b) Floo() {
}

func (f *b) Read(g []byte) (h int, i error) {
	var j other.A
	_ = j
	return 0, nil
}

func k(l *b, m io.Reader) {
	var n string
	o := 1
	n = "%d"
	fmt.Printf(n, o)
}

func p() {
	k(nil, &b{})
}
